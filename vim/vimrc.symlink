" be iMproved
set nocompatible

" required for vundle
filetype off

" show $ where we are changing
:set cpoptions+=$

" change <leader> key
let mapleader=","
set timeoutlen=250

" disable bell
set vb t_vb="

" syntax highlighting
filetype plugin on
filetype indent on
syntax on

"Write the old file out when switching between files.
set autowrite

"Show command in bottom right portion of the screen
set showcmd

"Show lines numbers
set number

"Better line wrapping
set wrap
set textwidth=79
set formatoptions=qrn1

"Set incremental searching"
set incsearch

"Highlight searching
set hlsearch

" case insensitive search
set ignorecase
set smartcase

" tabs
set expandtab
set autoindent
set shiftwidth=2
set softtabstop=2

" mouse support
set mouse=a

" autoreload .vimrc
augroup myvimrchooks
    au!
    autocmd bufwritepost .vimrc source ~/.vimrc
augroup END

" Use the same symbols as TextMate for tabstops and EOLs
" set listchars=tab:▸\ ,eol:¬

" Always center the cursor
nnoremap j jzz
nnoremap k kzz

" vundle settings
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
Bundle 'gmarik/vundle'

" Bundles
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'ervandew/supertab'
Bundle 'mileszs/ack.vim'
Bundle 'scrooloose/syntastic'
Bundle 'mattn/emmet-vim'
Bundle 'scrooloose/nerdcommenter'

" Nerdtree
autocmd vimenter * NERDTree
autocmd VimEnter * wincmd p
autocmd vimenter * if !argc() | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let g:NERDTreeDirArrows=0
